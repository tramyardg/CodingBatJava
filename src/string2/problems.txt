***********************************************************************

Return a version of the given string, where for every star (*) 
in the string the star and the chars immediately to its left and 
right are gone. So "ab*cd" yields "ad" and "ab**cd" also yields "ad".

starOut("ab*cd") → "ad"
starOut("ab**cd") → "ad"
starOut("sm*eilly") → "silly"

***********************************************************************

Return the number of times that the string "hi" appears anywhere in the given string.

countHi("abc hi ho") → 1
countHi("ABChi hi") → 2
countHi("hihi") → 2

***********************************************************************

Given two strings, return true if either of the strings appears 
at the very end of the other string, ignoring upper/lower 
case differences (in other words, the computation should 
not be "case sensitive"). Note: str.toLowerCase() 
returns the lowercase version of a string.

endOther("Hiabc", "abc") → true
endOther("AbC", "HiaBc") → true
endOther("abc", "abXabc") → true

***********************************************************************

We'll say that a String is xy-balanced if for all the 'x' chars in the string, 
there exists a 'y' char somewhere later in the string. So "xxy" is balanced, 
but "xyx" is not. One 'y' can balance multiple 'x's. 
Return true if the given string is xy-balanced.

xyBalance("aaxbby") → true
xyBalance("aaxbb") → false
xyBalance("yaaxbb") → false

***********************************************************************


